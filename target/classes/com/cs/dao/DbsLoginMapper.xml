<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cs.dao.DbsLoginMapper" >
  <resultMap id="BaseResultMap" type="com.cs.model.DbsLogin" >
    <id column="login_id" property="loginId" jdbcType="VARCHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="weixin" property="weixin" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="online" property="online" jdbcType="INTEGER" />
    <result column="reg_time" property="regTime" jdbcType="TIMESTAMP" />
    <result column="user_code" property="userCode" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="LoginAndUserResultMap" type="com.cs.model.DbsLogin" >
    <id column="login_id" property="loginId" jdbcType="VARCHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="weixin" property="weixin" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="online" property="online" jdbcType="INTEGER" />
    <result column="reg_time" property="regTime" jdbcType="TIMESTAMP" />
    <result column="user_code" property="userCode" jdbcType="INTEGER" />
    <association property="user" resultMap="UserResultMap"></association>
  </resultMap>
  <resultMap id="UserResultMap" type="com.cs.model.DbsUser" >
    <id column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="id_card" property="idCard" jdbcType="VARCHAR" />
    <result column="country" property="country" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="area" property="area" jdbcType="VARCHAR" />
    <result column="industry" property="industry" jdbcType="VARCHAR" />
    <result column="favor_trade" property="favorTrade" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="introduction" property="introduction" jdbcType="VARCHAR" />
    <result column="corp_name" property="corpName" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="dbs_duty" property="dbsDuty" jdbcType="VARCHAR" />
    <result column="balance" property="balance" jdbcType="VARCHAR" />
    <result column="invite_count" property="inviteCount" jdbcType="INTEGER" />
    <result column="career" property="career" jdbcType="VARCHAR" />
    <result column="dbs_count" property="dbsCount" jdbcType="INTEGER" />
    <result column="dbs_valid_count" property="dbsValidCount" jdbcType="INTEGER" />
    <result column="be_complaind_count" property="beComplaindCount" jdbcType="INTEGER" />
    <result column="user_code" property="userCode" jdbcType="VARCHAR" />
    <result column="is_professional" property="isProfessional" jdbcType="VARCHAR" />
    <result column="is_expert" property="isExpert" jdbcType="VARCHAR" />
    <result column="is_judger" property="isJudger" jdbcType="VARCHAR" />
    <result column="head_img" property="headImg" jdbcType="VARCHAR" />
  </resultMap>	    
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    login_id, login_name, weixin, qq, password, last_login_time, online, reg_time, user_code
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cs.model.DbsLoginExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dbs_login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="start != null and pageSize != null">
      limit ${start},${pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from dbs_login
    where login_id = #{loginId,jdbcType=VARCHAR}
  </select>
  <select id="selectByLoginName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from dbs_login
    where login_name = #{loginName,jdbcType=VARCHAR}
  </select>
  <select id="selectUniqueSysUser" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from dbs_login
    where login_name = #{loginName,jdbcType=VARCHAR} and extra1 like 'sys_%'
  </select>
  <select id="selectByUserCode" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from dbs_login
    where user_code = #{userCode,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from dbs_login
    where login_id = #{loginId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cs.model.DbsLoginExample" >
    delete from dbs_login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cs.model.DbsLogin" >
    insert into dbs_login (login_id, login_name, weixin, 
      qq, password, last_login_time, 
      online, reg_time, user_code
      )
    values (#{loginId,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, #{weixin,jdbcType=VARCHAR}, 
      #{qq,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP}, 
      #{online,jdbcType=INTEGER}, #{regTime,jdbcType=TIMESTAMP}, #{userCode,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cs.model.DbsLogin">
  	<selectKey order="AFTER" resultType="java.lang.Integer" keyProperty="userCode">
  		select LAST_INSERT_ID()
  	</selectKey>
    insert into dbs_login
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="loginId != null" >
        login_id,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="weixin != null" >
        weixin,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="lastLoginTime != null" >
        last_login_time,
      </if>
      <if test="online != null" >
        online,
      </if>
      <if test="regTime != null" >
        reg_time,
      </if>
      <if test="userCode != null" >
        user_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="loginId != null" >
        #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="weixin != null" >
        #{weixin,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="online != null" >
        #{online,jdbcType=INTEGER},
      </if>
      <if test="regTime != null" >
        #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userCode != null" >
        #{userCode,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cs.model.DbsLoginExample" resultType="java.lang.Integer" >
    select count(*) from dbs_login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update dbs_login
    <set >
      <if test="record.loginId != null" >
        login_id = #{record.loginId,jdbcType=VARCHAR},
      </if>
      <if test="record.loginName != null" >
        login_name = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.weixin != null" >
        weixin = #{record.weixin,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null" >
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginTime != null" >
        last_login_time = #{record.lastLoginTime,jdbcType=TIME},
      </if>
      <if test="record.online != null" >
        online = #{record.online,jdbcType=INTEGER},
      </if>
      <if test="record.regTime != null" >
        reg_time = #{record.regTime,jdbcType=TIME},
      </if>
      <if test="record.userCode != null" >
        user_code = #{record.userCode,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update dbs_login
    set login_id = #{record.loginId,jdbcType=VARCHAR},
      login_name = #{record.loginName,jdbcType=VARCHAR},
      weixin = #{record.weixin,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      last_login_time = #{record.lastLoginTime,jdbcType=TIME},
      online = #{record.online,jdbcType=INTEGER},
      reg_time = #{record.regTime,jdbcType=TIME},
      user_code = #{record.userCode,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cs.model.DbsLogin" >
    update dbs_login
    <set >
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="weixin != null" >
        weixin = #{weixin,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null" >
        last_login_time = #{lastLoginTime,jdbcType=TIME},
      </if>
      <if test="online != null" >
        online = #{online,jdbcType=INTEGER},
      </if>
      <if test="regTime != null" >
        reg_time = #{regTime,jdbcType=TIME},
      </if>
      <if test="userCode != null" >
        user_code = #{userCode,jdbcType=INTEGER},
      </if>
    </set>
    where login_id = #{loginId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cs.model.DbsLogin" >
    update dbs_login
    set login_name = #{loginName,jdbcType=VARCHAR},
      weixin = #{weixin,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=TIME},
      online = #{online,jdbcType=INTEGER},
      reg_time = #{regTime,jdbcType=TIME},
      user_code = #{userCode,jdbcType=INTEGER}
    where login_id = #{loginId,jdbcType=VARCHAR}
  </update>
  
  <select id="login" parameterType="com.cs.model.DbsLogin" resultMap="LoginAndUserResultMap">
  	select 
  		*
  	 from dbs_login l left join dbs_user u on u.user_code=l.user_code where 1=1 
  	
  	<if test="password != null">
  		and l.password = #{password}
  	</if>
  	<trim prefix=" and (" suffix=")" suffixOverrides="or">
  		<if test="loginName != null">
  			l.login_name = #{loginName} or
  		</if>
  		<if test="weixin != null">
  			l.weixin = #{weixin} or
  		</if>
  		<if test="qq != null">
  			l.qq = #{qq} or
  		</if>
  	</trim>
  </select>
  
  <select id="onlineCount" parameterType="com.cs.model.DbsLoginExample" resultType="java.lang.Integer">
  	select count(1) from dbs_login where online=1
  </select>
</mapper>